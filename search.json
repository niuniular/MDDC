[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge make participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces, also applies individual representing project community public spaces. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team raktimmu@buffalo.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anran Liu. Author, maintainer. Raktim Mukhopadhyay. Author, maintainer. Marianthi Markatou. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu , Mukhopadhyay R, Markatou M (2024). MDDC: Modified Detecting Deviating Cells (MDDC) Algorithm Adverse Event Identification Pharmacovigilance. R package version 1.0.0, https://github.com/niuniular/MDDC.","code":"@Manual{,   title = {MDDC: Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance},   author = {Anran Liu and Raktim Mukhopadhyay and Marianthi Markatou},   year = {2024},   note = {R package version 1.0.0},   url = {https://github.com/niuniular/MDDC}, }"},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"package, present Modified Detecting Deviating Cells (MDDC) algorithm adverse event identification. II denotes total number AEs JJ denotes total number drugs cell counts nijn_{ij} total number reported cases corresponding jj-th drug ii-th AE interested (AE, drug) pairs signals. signals refer potential adverse events may caused drug. contingency table setting, signals refer cells nijn_{ij} abnormally higher expected values. Rousseeuw Bossche (2018) proposed Detecting Deviating Cells (DDC) algorithm outlier identification multivariate dataset. original DDC algorithm assumes multivariate normality data selects cutoff values based assumption. foundation DDC algorithm lies detecting deviating data cells within multivariate dataset. Inspired work, modify DDC algorithm better suit discrete nature adverse event data pharmacovigilance. easy compute. considers AE relationships. depends data-driven cutoffs. MDDC algorithm involves five steps, first two steps identifying univariate outliers via cutoffs, next three steps evaluating signals via use AE correlations. algorithm can found MDDC algorithm.","code":""},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"Anran Liu Email: anranliu@buffalo.edu Raktim Mukhopadhyay Email: raktimmu@buffalo.edu Marianthi Markatou Email: markatou@buffalo.edu","code":""},{"path":"/index.html","id":"maintainers","dir":"","previous_headings":"","what":"Maintainers","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"Anran Liu Email: anranliu@buffalo.edu Raktim Mukhopadhyay Email: raktimmu@buffalo.edu","code":""},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"documentation hosted - https://niuniular.github.io/MDDC/index.html","code":""},{"path":"/index.html","id":"funding-information","dir":"","previous_headings":"","what":"Funding Information","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"work supported Kaleida Health Foundation, Food Drug Administration, Department Biostatistics, University Buffalo.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Modified Detecting Deviating Cells (MDDC) Algorithm for Adverse Event Identification in Pharmacovigilance","text":"Rousseeuw, P. J., & Bossche, W. V. D. (2018). Detecting deviating data cells. Technometrics, 60(2), 135-145.","code":""},{"path":"/reference/AE_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","title":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","text":"50 2 data frame showing cluster index statin49 dataset's adverse events.","code":""},{"path":"/reference/AE_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","text":"","code":"AE_idx"},{"path":"/reference/AE_idx.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","text":"data frame 50 rows 2 columns: idx AE.","code":""},{"path":"/reference/AE_idx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","text":"data frame 50 rows 2 columns: idx AE. AE lists adverse event names statin49 dataset, idx lists cluster index adverse event. 49 AEs classified three clusters: 1) AEs associated signs symptoms muscle injury, 2) AEs associated laboratory tests muscle injury, 3) AEs associated kidney injury laboratory diagnosis treatment.","code":""},{"path":"/reference/AE_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster index of the FDA statin dataset with 49 adverse events — AE_idx","text":"","code":"data(AE_idx) head(AE_idx) #>   idx                 AE #> 1   1     Rhabdomyolysis #> 2   1    Muscle Disorder #> 3   1     Muscle Fatigue #> 4   1 Muscle Haemorrhage #> 5   1    Muscle Necrosis #> 6   1     Muscle Rupture"},{"path":"/reference/anaphylaxis.html","id":null,"dir":"Reference","previous_headings":"","what":"FDA Anaphylaxis Dataset — anaphylaxis","title":"FDA Anaphylaxis Dataset — anaphylaxis","text":"130 4 data matrix FDA Adverse Event Reporting System (FAERS) database, processed 2016. contains drugs associated adverse events, focusing events related anaphylaxis.","code":""},{"path":"/reference/anaphylaxis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FDA Anaphylaxis Dataset — anaphylaxis","text":"","code":"data(anaphylaxis)"},{"path":"/reference/anaphylaxis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FDA Anaphylaxis Dataset — anaphylaxis","text":"data matrix 130 rows 4 columns: drugs 130 drugs represented rows. adverse_events 4 adverse events related anaphylaxis represented   columns.","code":""},{"path":"/reference/anaphylaxis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FDA Anaphylaxis Dataset — anaphylaxis","text":"130 rows represent different drugs, 4 columns correspond adverse events associated anaphylaxis. Data FDA Adverse Event Reporting System (FAERS) database, specifically 2016 reports. dataset helps identify drugs associated 4 anaphylaxis-related adverse events, rather focusing identifying adverse events associated drug class.","code":""},{"path":"/reference/anaphylaxis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FDA Anaphylaxis Dataset — anaphylaxis","text":"","code":"head(anaphylaxis) #>                    Anaphylactic reaction Anaphylactic shock #> ABATACEPT                             33                  9 #> ACETAMINOPHEN                         42                 11 #> ADALIMUMAB                           102                 27 #> ALEMTUZUMAB                            1                  0 #> ALENDRONATE SODIUM                     8                  2 #> AMBRISENTAN                            3                  1 #>                    Hypotension_unspecified Urticaria_unspecified #> ABATACEPT                               50                    55 #> ACETAMINOPHEN                          152                   116 #> ADALIMUMAB                             285                  1662 #> ALEMTUZUMAB                             43                    87 #> ALENDRONATE SODIUM                     161                    25 #> AMBRISENTAN                            501                    17"},{"path":"/reference/check_and_fix_contin_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","title":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","text":"Verify correct input \\(\\) \\(J\\) contingency table ensure properly formatted data matrix row (adverse event) column (drug) names.","code":""},{"path":"/reference/check_and_fix_contin_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","text":"","code":"check_and_fix_contin_table(contin_table)"},{"path":"/reference/check_and_fix_contin_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","text":"contin_table data matrix data frame \\(\\) \\(J\\) contingency table without prespecified row column names.","code":""},{"path":"/reference/check_and_fix_contin_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","text":"data matrix \\(\\) \\(J\\) contingency table row column names.","code":""},{"path":"/reference/check_and_fix_contin_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verifying and correcting the input \\(I\\) by \\(J\\) contingency table — check_and_fix_contin_table","text":"","code":"# Create a 6 by 4 data matrix set.seed(42) dat_mat <- matrix(rpois(6 * 4, 20), nrow = 6) dat_mat #>      [,1] [,2] [,3] [,4] #> [1,]   26   19   25   18 #> [2,]   17   29   24   12 #> [3,]   20   19   23   27 #> [4,]   15   25   22   21 #> [5,]   19   30   24   21 #> [6,]   26   13   16   18  # Check the format of the data matrix and assign row and column names contin_table <- check_and_fix_contin_table(dat_mat) contin_table #>      drug_1 drug_2 drug_3 drug_4 #> AE_1     26     19     25     18 #> AE_2     17     29     24     12 #> AE_3     20     19     23     27 #> AE_4     15     25     22     21 #> AE_5     19     30     24     21 #> AE_6     26     13     16     18"},{"path":"/reference/generate_contin_table_with_clustered_AE.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","title":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","text":"Generate simulated contingency tables option incorporating adverse event correlation within clusters.","code":""},{"path":"/reference/generate_contin_table_with_clustered_AE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","text":"","code":"generate_contin_table_with_clustered_AE(   contin_table,   n_rep = 1,   AE_idx,   rho = 0.5,   signal_mat )"},{"path":"/reference/generate_contin_table_with_clustered_AE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","text":"contin_table data matrix \\(\\) x \\(J\\) contingency table row (adverse event) column (drug) names, row column marginals used generate simulated data. Please first check input contingency table using function check_and_fix_contin_table(). n_rep Number contingency tables generated. AE_idx data frame two variables idx AE, idx indicates cluster index (can either name number), AE lists adverse event names. See AE_idx statin49 data example. rho numeric value indicating correlation AEs within cluster. Default 0.5. signal_mat data matrix dimension contingency table entries representing signal strength. values greater equal 1, 1 indicates signal, values greater 1 indicate signal.","code":""},{"path":"/reference/generate_contin_table_with_clustered_AE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","text":"list n_rep simulated contingency tables.","code":""},{"path":"/reference/generate_contin_table_with_clustered_AE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate simulated contingency tables with option of incorporating adverse event correlation within clusters. — generate_contin_table_with_clustered_AE","text":"","code":"# using statin49 as an example data(statin49) data(AE_idx)  # Prepare a matrix of signal strength with the same dimension as # statin49, where 1 indicates no signal and values > 1 indicate # signal lambda_matrix <- matrix(1, nrow = nrow(statin49), ncol = ncol(statin49))  # Assign the cell (45,1) with signal strength 4 lambda_matrix[45, 1] <- 4  # Generate 5 simulated tables set.seed(123) simulated_tables <- generate_contin_table_with_clustered_AE(   contin_table = statin49,   n_rep = 5,   AE_idx = AE_idx,   rho = 0.5,   signal_mat = lambda_matrix )"},{"path":"/reference/get_expected_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","title":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","text":"function computes expected counts matrix \\(E_{ij}\\) given \\(\\times J\\) contingency table using formula: $$E_{ij} = \\frac{n_{.} n_{.j}}{n_{..}}$$ \\(n_{.}\\) sum \\(\\)-th row, \\(n_{.j}\\) sum \\(j\\)-th column, \\(n_{..}\\) total sum table.","code":""},{"path":"/reference/get_expected_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","text":"","code":"get_expected_counts(continTable)"},{"path":"/reference/get_expected_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","text":"continTable numeric matrix representing \\(\\times J\\) contingency table.","code":""},{"path":"/reference/get_expected_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","text":"numeric matrix dimension continTable, containing expected counts cell \\((, j)\\) contingency table. expected counts based row column marginal sums contingency table.","code":""},{"path":"/reference/get_expected_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Expected Count Matrix from a Contingency Table — get_expected_counts","text":"","code":"# Create a 6 by 4 contingency table set.seed(42) dat_mat <- matrix(rpois(6*4, 20), nrow=6) dat_mat #>      [,1] [,2] [,3] [,4] #> [1,]   26   19   25   18 #> [2,]   17   29   24   12 #> [3,]   20   19   23   27 #> [4,]   15   25   22   21 #> [5,]   19   30   24   21 #> [6,]   26   13   16   18  # Assign row and column names contin_table <- check_and_fix_contin_table(dat_mat) contin_table #>      drug_1 drug_2 drug_3 drug_4 #> AE_1     26     19     25     18 #> AE_2     17     29     24     12 #> AE_3     20     19     23     27 #> AE_4     15     25     22     21 #> AE_5     19     30     24     21 #> AE_6     26     13     16     18  # Compute the expected counts of the contingency table get_expected_counts(contin_table) #>          [,1]     [,2]     [,3]     [,4] #> [1,] 21.26523 23.33988 23.16699 20.22790 #> [2,] 19.81532 21.74853 21.58743 18.84872 #> [3,] 21.50688 23.60511 23.43026 20.45776 #> [4,] 20.05697 22.01375 21.85069 19.07859 #> [5,] 22.71513 24.93124 24.74656 21.60707 #> [6,] 17.64047 19.36149 19.21807 16.77996"},{"path":"/reference/get_std_pearson_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","title":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","text":"Compute standardized Pearson residuals given \\(\\times J\\) contingency table.","code":""},{"path":"/reference/get_std_pearson_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","text":"","code":"get_std_pearson_res(contin_table)"},{"path":"/reference/get_std_pearson_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","text":"contin_table matrix \\(\\) \\(J\\) contingency table.","code":""},{"path":"/reference/get_std_pearson_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","text":"matrix standardized Pearson residuals input contingency table.","code":""},{"path":"/reference/get_std_pearson_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing the standardized Pearson residuals for a given \\(I\\) by \\(J\\) contingency table — get_std_pearson_res","text":"","code":"# Create a 6 by 4 data matrix set.seed(42) dat_mat <- matrix(rpois(6 * 4, 20), nrow = 6) dat_mat #>      [,1] [,2] [,3] [,4] #> [1,]   26   19   25   18 #> [2,]   17   29   24   12 #> [3,]   20   19   23   27 #> [4,]   15   25   22   21 #> [5,]   19   30   24   21 #> [6,]   26   13   16   18  # Check the format of the data matrix and assign row and column names # to the data matrix contin_table <- check_and_fix_contin_table(dat_mat) contin_table #>      drug_1 drug_2 drug_3 drug_4 #> AE_1     26     19     25     18 #> AE_2     17     29     24     12 #> AE_3     20     19     23     27 #> AE_4     15     25     22     21 #> AE_5     19     30     24     21 #> AE_6     26     13     16     18  # Compute the standardized Pearson residuals get_std_pearson_res(contin_table) #>          drug_1    drug_2      drug_3     drug_4 #> AE_1  1.2964248 -1.152311  0.48785428 -0.6206598 #> AE_2 -0.7929358  1.980521  0.66049322 -1.9625894 #> AE_3 -0.4107602 -1.217290 -0.11400275  1.8144605 #> AE_4 -1.4173509  0.811626  0.04067809  0.5479210 #> AE_5 -0.9913254  1.311559 -0.19363617 -0.1648137 #> AE_6  2.4694917 -1.822336 -0.92405981  0.3666991"},{"path":"/reference/mddc_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","text":"Modified Detecting Deviating Cells (MDDC) algorithm adverse event signal identification. Boxplot method used cutoff selection step 2 algorithm.","code":""},{"path":"/reference/mddc_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","text":"","code":"mddc_boxplot(   contin_table,   col_specific_cutoff = TRUE,   separate = TRUE,   if_col_cor = FALSE,   cor_lim = 0.8,   num_cores = 2 )"},{"path":"/reference/mddc_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","text":"contin_table data matrix \\(\\) x \\(J\\) contingency table row (adverse event) column (drug) names. Please first check input contingency table using function check_and_fix_contin_table(). col_specific_cutoff Logical. step 2 algorithm, whether apply boxplot method standardized Pearson residuals entire table, within drug column. Default TRUE, within drug column (column specific cutoff). FALSE indicates applying boxplot method residuals entire table. separate Logical. step 2 algorithm, whether separate standardized Pearson residuals zero cells non zero cells apply boxplot method separately together. Default TRUE. if_col_cor Logical. step 3 algorithm, whether use column (drug) correlation row (adverse event) correlation. Default FALSE, using adverse event correlation. TRUE indicates using drug correlation. cor_lim numeric value (0, 1). step 3, correlation threshold used select “connected” adverse events. Default 0.8. num_cores Number cores used parallelize MDDC Boxplot algorithm. Default 2.","code":""},{"path":"/reference/mddc_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","text":"list following components: boxplot_signal returns signals identified step 2. 1 indicates signals, 0 non signal. corr_signal_pval returns p values cell contingency table step 5, \\(r_{ij}\\) values mapped back standard normal distribution. corr_signal_adj_pval returns Benjamini-Hochberg adjusted p values cell step 5. leave option user decide whether use corr_signal_pval corr_signal_adj_pval, threshold p values used (example, 0.05). Please see example .","code":""},{"path":"/reference/mddc_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with boxplot method for cutoff selection. — mddc_boxplot","text":"","code":"# using statin49 data set as an example data(statin49)  # apply the mddc_boxplot boxplot_res <- mddc_boxplot(statin49)  # signals identified in step 2 using boxplot method signal_step2 <- boxplot_res$boxplot_signal  # signals identified in step 5 by considering AE correlations # In this example, cells with p values less than 0.05 are  # identified as signals signal_step5 <- (boxplot_res$corr_signal_pval < 0.05) * 1"},{"path":"/reference/mddc_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","text":"Modified Detecting Deviating Cells (MDDC) algorithm adverse event signal identification. Monte Carlo (MC) method used cutoff selection step 2 algorithm.","code":""},{"path":"/reference/mddc_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","text":"","code":"mddc_mc(   contin_table,   quantile = 0.95,   rep = 10000,   exclude_same_drug_class = TRUE,   col_specific_cutoff = TRUE,   separate = TRUE,   if_col_cor = FALSE,   cor_lim = 0.8,   num_cores = 2,   seed = NULL )"},{"path":"/reference/mddc_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","text":"contin_table data matrix \\(\\) x \\(J\\) contingency table row (adverse event) column (drug) names. Please first check input contingency table using function check_and_fix_contin_table(). quantile step 2 algorithm, quantile null distribution obtained via MC method use threshold identifying cells high value standardized Pearson residuals. Default 0.95. rep step 2, number Monte Carlo replications MC method. Default 10000. exclude_same_drug_class step 2, applying Fisher's exact test cells count less six, 2 2 contingency table needs constructed. construction exclude drugs class drug interest? Default TRUE. col_specific_cutoff Logical. step 2 algorithm, whether apply MC method standardized Pearson residuals entire table, within drug column. Default TRUE, within drug column (column specific cutoff). FALSE indicates applying MC method residuals entire table. separate Logical. step 2 algorithm, whether separate standardized Pearson residuals zero cells non zero cells apply MC method separately together. Default TRUE. if_col_cor Logical. step 3 algorithm, whether use column (drug) correlation row (adverse event) correlation. Default FALSE, using adverse event correlation. TRUE indicates using drug correlation. cor_lim numeric value (0, 1). step 3, correlation threshold used select “connected” adverse events. Default 0.8. num_cores Number cores used parallelize MDDC Boxplot algorithm. Default 2. seed optional integer set seed reproducibility. NULL, seed set.","code":""},{"path":"/reference/mddc_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","text":"list following components: mc_pval returns p values cell step 2. cells count greater five, p values obtained via MC method. cells count less equal five, p values obtained via Fisher's exact tests. mc_signal returns signals count greater five identified step 2 MC method. 1 indicates signals, 0 non signal. fisher_signal returns signals count less equal five identified step 2 Fisher's exact tests. 1 indicates signals, 0 non signal. corr_signal_pval returns p values cell contingency table step 5, \\(r_{ij}\\) values mapped back standard normal distribution. corr_signal_adj_pval returns Benjamini-Hochberg adjusted p values cell step 5. leave option user decide whether use corr_signal_pval corr_signal_adj_pval, threshold p values used (example, 0.05). Please see example .","code":""},{"path":"/reference/mddc_mc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modified Detecting Deviating Cells (MDDC) algorithm for adverse event signal identification with Monte Carlo (MC) method for cutoff selection. — mddc_mc","text":"","code":"# using statin49 data set as an example data(statin49)  # apply the mddc_mc mc_res <- mddc_boxplot(statin49)  # signals identified in step 2 using MC method signal_step2 <- mc_res$mc_signal  # signals identified in step 5 by considering AE correlations # In this example, cells with p values less than 0.05 are # identified as signals signal_step5 <- (mc_res$corr_signal_pval < 0.05) * 1"},{"path":"/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap — plot_heatmap","title":"Plot Heatmap — plot_heatmap","text":"Creates heatmap plot matrix data frame.","code":""},{"path":"/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap — plot_heatmap","text":"","code":"plot_heatmap(data, cell_width = 1, cell_height = 1, ...)"},{"path":"/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap — plot_heatmap","text":"data matrix data frame visualized heatmap. row names column names data used labeling heatmap axes. cell_width Numeric value indicating width cell heatmap. Default 1. cell_height Numeric value indicating height cell heatmap. Default 1. ... Additional arguments passed geom_tile ggplot2 functions.","code":""},{"path":"/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heatmap — plot_heatmap","text":"ggplot object representing heatmap.","code":""},{"path":"/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Heatmap — plot_heatmap","text":"","code":"# Example data data <- matrix(rnorm(100), nrow = 10, ncol = 10) rownames(data) <- paste0(\"Row\", 1:10) colnames(data) <- paste0(\"Col\", 1:10)  # Plot heatmap plot <- plot_heatmap(data) print(plot)"},{"path":"/reference/report_drug_AE_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","title":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","text":"Report potential adverse events drugs contingency table","code":""},{"path":"/reference/report_drug_AE_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","text":"","code":"report_drug_AE_pairs(contin_table, contin_table_signal)"},{"path":"/reference/report_drug_AE_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","text":"contin_table data matrix \\(\\) x \\(J\\) contingency table row (adverse event) column (drug) names. Please first check input contingency table using function check_and_fix_contin_table(). contin_table_signal data matrix dimension row column names contin_table, entries either 1 (indicating signal) 0 (indicating non-signal). data matrix can obtained via applying function mddc_boxplot mddc_mc.","code":""},{"path":"/reference/report_drug_AE_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","text":"data frame five variables: drug drug name. AE potential adverse event drug. observed_num observed count (drug, AE) pair. expected_num expected count (drug, AE) pair. std_pearson_res value standardized Pearson residual.","code":""},{"path":"/reference/report_drug_AE_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report the potential adverse events for drugs from contingency table — report_drug_AE_pairs","text":"","code":"# load statin49 data data(statin49)  # run mddc boxplot method test1 <- mddc_boxplot(statin49)  # get the signals from step 2 contin_table_signal <- test1$boxplot_signal  # get the signals from step 5 contin_table_signal_corr <- test1$corr_signal_pval < 0.05  # identify the (drug, AE) signals for step 2 result_1 <- report_drug_AE_pairs(   contin_table = statin49,   contin_table_signal = contin_table_signal ) result_1 #>            drug                                        AE observed_num #> 1  Atorvastatin                            Rhabdomyolysis         2041 #> 2  Atorvastatin                                   Myalgia         5362 #> 3  Atorvastatin                                  Myopathy          849 #> 4  Atorvastatin                      Necrotising Myositis          279 #> 5  Atorvastatin    Blood Creatine Phosphokinase Increased         1175 #> 6   Fluvastatin                                   Myalgia          341 #> 7   Fluvastatin                                  Myopathy           64 #> 8   Fluvastatin    Blood Creatine Phosphokinase Increased          125 #> 9    Lovastatin                                  Myopathy           45 #> 10  Pravastatin                            Rhabdomyolysis          163 #> 11  Pravastatin                            Muscle Rupture           61 #> 12  Pravastatin                                   Myalgia          939 #> 13  Pravastatin                                  Myopathy          145 #> 14  Pravastatin    Blood Creatine Phosphokinase Increased          200 #> 15 Rosuvastatin                            Rhabdomyolysis          936 #> 16 Rosuvastatin                           Muscle Disorder          191 #> 17 Rosuvastatin                         Muscular Weakness          808 #> 18 Rosuvastatin                                   Myalgia         2757 #> 19 Rosuvastatin                                  Myopathy          377 #> 20 Rosuvastatin    Blood Creatine Phosphokinase Increased          562 #> 21 Rosuvastatin Blood Creatine Phosphokinase Mm Increased            9 #> 22  Simvastatin                            Rhabdomyolysis         1376 #> 23  Simvastatin                         Muscular Weakness          859 #> 24  Simvastatin                                   Myalgia         3216 #> 25  Simvastatin                                  Myopathy          544 #> 26  Simvastatin                      Necrotising Myositis           52 #> 27  Simvastatin    Blood Creatine Phosphokinase Increased          768 #> 28        Other                                  Other AE     61703817 #>     expected_num std_pearson_res #> 1       112.0567        182.5555 #> 2        483.119        222.5852 #> 3        26.9011        158.7594 #> 4          1.916        200.4873 #> 5        82.2769        120.6793 #> 6        14.0537         87.3237 #> 7         0.7825         71.4713 #> 8         2.3934         79.2713 #> 9         0.4402         67.1676 #> 10       12.7651         42.0686 #> 11        1.2801          52.795 #> 12       55.0353        119.3226 #> 13        3.0645         81.0995 #> 14        9.3727         62.2901 #> 15       69.5139        104.0555 #> 16        15.174          45.183 #> 17      219.6389         39.7736 #> 18      299.7007        142.2533 #> 19        16.688         88.2922 #> 20       51.0401          71.604 #> 21        0.0478         40.9642 #> 22       48.5064        190.7859 #> 23      153.2629         57.0958 #> 24      209.1296        208.3192 #> 25       11.6448        156.1188 #> 26        0.8294         56.2256 #> 27       35.6155        122.8288 #> 28 61678483.2716        228.1052  # identify the (drug, AE) signals for step 5 result_2 <- report_drug_AE_pairs(   contin_table = statin49,   contin_table_signal = contin_table_signal_corr ) result_2 #>            drug                                        AE observed_num #> 1  Atorvastatin                      Necrotising Myositis          279 #> 2   Fluvastatin                            Muscle Rupture           25 #> 3   Fluvastatin                Musculoskeletal Discomfort           18 #> 4   Fluvastatin                             Myoglobinuria            4 #> 5    Lovastatin                Musculoskeletal Discomfort           15 #> 6   Pravastatin                            Muscle Rupture           61 #> 7  Rosuvastatin                           Muscle Disorder          191 #> 8  Rosuvastatin                         Muscular Weakness          808 #> 9  Rosuvastatin Blood Creatine Phosphokinase Mm Increased            9 #> 10  Simvastatin                         Muscular Weakness          859 #> 11  Simvastatin                      Necrotising Myositis           52 #>    expected_num std_pearson_res #> 1         1.916        200.4873 #> 2        0.3269         43.1584 #> 3        1.8315         11.9498 #> 4        0.0302          22.827 #> 5        1.0302         13.7657 #> 6        1.2801          52.795 #> 7        15.174          45.183 #> 8      219.6389         39.7736 #> 9        0.0478         40.9642 #> 10     153.2629         57.0958 #> 11       0.8294         56.2256"},{"path":"/reference/statin49.html","id":null,"dir":"Reference","previous_headings":"","what":"FDA statin dataset with 49 adverse events — statin49","title":"FDA statin dataset with 49 adverse events — statin49","text":"50 7 data matrix contingency table processed FDA Adverse Event Reporting System (FAERS) database Q3 2014 Q4 2020.","code":""},{"path":"/reference/statin49.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FDA statin dataset with 49 adverse events — statin49","text":"","code":"statin49"},{"path":"/reference/statin49.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FDA statin dataset with 49 adverse events — statin49","text":"data matrix 50 rows 7 columns.","code":""},{"path":"/reference/statin49.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FDA statin dataset with 49 adverse events — statin49","text":"50 7 data matrix contingency table FDA Adverse Event Reporting System (FAERS) database, covering Q3 2014 Q4 2020. 49 rows represent important adverse events associated statins, final row aggregating remaining 5,990 events. 49 AEs classified three clusters (see AE_idx cluster indices): 1) AEs associated muscle injury signs symptoms, 2) AEs associated muscle injury lab tests, 3) AEs associated kidney injury diagnosis treatment. 7 columns include six statin medications \"drugs\" column occurrences 6,039 events. Marginal totals drug: 197,390 Atorvastatin, 5,742 Fluvastatin, 3,230 Lovastatin, 22,486 Pravastatin, 122,450 Rosuvastatin, 85,445 Simvastatin, 63,539,867 drugs.","code":""},{"path":"/reference/statin49.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FDA statin dataset with 49 adverse events — statin49","text":"","code":"data(statin49) head(statin49) #>                    Atorvastatin Fluvastatin Lovastatin Pravastatin Rosuvastatin #> Rhabdomyolysis             2041          52         44         163          936 #> Muscle Disorder             291           2          7          21          191 #> Muscle Fatigue               85           0          2          16           30 #> Muscle Haemorrhage           24           0          0           5           13 #> Muscle Necrosis              68           2          0           1           10 #> Muscle Rupture              181          25          0          61           36 #>                    Simvastatin Other #> Rhabdomyolysis            1376 31707 #> Muscle Disorder             87  7329 #> Muscle Fatigue              39  4257 #> Muscle Haemorrhage           4  3806 #> Muscle Necrosis             20   662 #> Muscle Rupture             120  3219"},{"path":[]},{"path":"/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"MDDC 1.0.0","text":"Currently progress","code":""}]
